version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}

services:
### MySQL #################################################
    mysql:
      build:
        context: ./mysql
        args:
          - MYSQL_VERSION=${MYSQL_VERSION}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${TIMEZONE}
      volumes:
        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "${MYSQL_PORT}:3306"
      networks:
        - backend

### Redis #################################################
    redis:
      build: ./redis
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      ports:
        - "${REDIS_PORT}:6379"
      networks:
        - backend

### tomcat ###############################################
    tomcat:
      build:
        context: ./tomcat
        args:
          - TOMCAT_VERSION=${TOMCAT_VERSION}
      volumes:
        - ${CODE_PATH_HOST}:${CODE_PATH_CONTAINER}
        - ${LOGS_PATH_HOST}/tomcat:/usr/local/tomcat/logs
      ports:
        - "${TOMCAT_HTTP_PORT_HOST}:80"
        - "${TOMCAT_HTTPS_PORT_HOST}:443"
      networks:
        - frontend
        - backend
      depends_on: 
        - mysql
